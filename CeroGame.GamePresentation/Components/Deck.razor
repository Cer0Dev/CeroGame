@using CeroGame.GamePresentation.Core;
@inherits DeckBase
<div>
@for (int i = 0; i < Math.Ceiling((double)Cards.Count() / CardsPerRow); i++)
{
    var index = (i * CardsPerRow) <= Cards.Count() - 1 ? (i * CardsPerRow) : Math.Abs((i * CardsPerRow) - (Cards.Count() - 1));
    var count = (CardsPerRow + index <= Cards.Count() - 1 ? CardsPerRow : Math.Abs(Cards.Count() - index));
    var topOffset = (_topOffsetMultiplyer * i) * -1;
    <div class="row align-items-center justify-content-center" style=@($"margin-right: calc(var(--card-width-normal) * {(CardsPerRow-count)/2}); margin-left: var(--card-width-normal);")>

        @foreach (var item in Cards.GetRange(index, count))
        {
            var leftOffset = (_leftOffsetMultiplyer * (Math.Ceiling((double)Cards.IndexOf(item) % CardsPerRow))) * -1;
            <CeroGame.GamePresentation.Components.Card Hidden=Hidden CardModel="item" Deck="this" GM=this.GM LeftOffset="leftOffset" topOffset="topOffset" />
        }
    </div>

}
</div>